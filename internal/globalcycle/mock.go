// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/globalcycle/interface.go

// Package globalcycle is a generated GoMock package.
package globalcycle

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCommon is a mock of Common interface.
type MockCommon struct {
	ctrl     *gomock.Controller
	recorder *MockCommonMockRecorder
}

// MockCommonMockRecorder is the mock recorder for MockCommon.
type MockCommonMockRecorder struct {
	mock *MockCommon
}

// NewMockCommon creates a new mock instance.
func NewMockCommon(ctrl *gomock.Controller) *MockCommon {
	mock := &MockCommon{ctrl: ctrl}
	mock.recorder = &MockCommonMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommon) EXPECT() *MockCommonMockRecorder {
	return m.recorder
}

// GetNewGlobalCycle mocks base method.
func (m *MockCommon) GetNewGlobalCycle(ctx context.Context, tableName string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNewGlobalCycle", ctx, tableName)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNewGlobalCycle indicates an expected call of GetNewGlobalCycle.
func (mr *MockCommonMockRecorder) GetNewGlobalCycle(ctx, tableName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNewGlobalCycle", reflect.TypeOf((*MockCommon)(nil).GetNewGlobalCycle), ctx, tableName)
}

// InsertGlobal mocks base method.
func (m *MockCommon) InsertGlobal(ctx context.Context, tableName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertGlobal", ctx, tableName)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertGlobal indicates an expected call of InsertGlobal.
func (mr *MockCommonMockRecorder) InsertGlobal(ctx, tableName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertGlobal", reflect.TypeOf((*MockCommon)(nil).InsertGlobal), ctx, tableName)
}

// Update mocks base method.
func (m *MockCommon) Update(ctx context.Context, tableName string, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, tableName, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockCommonMockRecorder) Update(ctx, tableName, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockCommon)(nil).Update), ctx, tableName, id)
}
